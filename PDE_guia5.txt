ESTRUCTURAS


1) Declare una estructura para almacenar datos de estudiantes (DNI y dos notas correspondientes a los dos cuatrimestres del año).
Haga un programa que permita ingresar los datos de 5 estudiantes en un vector de estas estructuras.
Luego de ingresar los datos se deben mostrar los DNI de cada estudiante y el promedio que tiene en sus exámenes.

2) Una aerolinea tiene vuelos, los cuales poseen un código alfanumérico (ejemplo: AR1500), una ciudad de origen y una ciudad de destino. Ingrese 4 vuelos en un vector. Luego de ingresados los datos permita que el usuario escriba el nombre de una ciudad y muestre los vuelos que parten y los que arriban a esa ciudad. 
Si no hubiera vuelos para la ciudad ingresada debe mostrarse un mensaje de error.

3) Utilice el ejercicio 1, modificándolo para que las notas del estudiante estén en un vector de notas dentro de la estructura. Este vector de notas puede almacenar hasta 10 notas del alumno. Los lugares no utilizados se escriben con un valor -1 para indicar que ese lugar está vacío.
De esta manera, un estudiante puede haber rendido 2 exámenes, otro 4 y otro 10, para citar algunos ejemplos. 
Se pide conservar la funcionalidad del programa teniendo en cuenta esta nueva organización de la información. Por lo tanto, para mostrar el promedio del estudiante, habrá que considerar las notas que tiene en este vector de notas, teniendo cuidado en utilizar solamente las notas que existan y omitiendo los -1 que pueda haber.

4) Una ferretería tiene un listado de facturas emitidas en cierto año, con estos datos: número de factura, fecha de emisión (día y mes), nombre del cliente y monto total. Dado un vector de 10 facturas, se necesita mostrar en pantalla cuál fue el mejor mes (o sea, el de mayor dinero facturado). Los datos se pueden ingresar por teclado o dejarlos fijos en el programa para no perder tiempo en tipear datos.